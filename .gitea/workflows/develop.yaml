name: Deploy to Develop Server
run-name: ${{ gitea.actor }} is running Gitea Actions üöÄ

on:
  push:
    branches:
      - develop

jobs:
  notification_starting:
    name: "Preparation"
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: "üõé Notification: Starting"
        uses: mattermost/action-mattermost-notify@master
        with:
          MATTERMOST_WEBHOOK_URL: https://office.dlabs.id/hooks/mp1qz6hteir5fjdrxp8b6e9r1a
          MATTERMOST_CHANNEL: "Jenkins"
          TEXT: |
            Starting CICD ${{ github.repository }}.
            [Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_number }}) was starting :runner:.
          MATTERMOST_USERNAME: system
          MATTERMOST_ICON_URL: https://cdn3.iconfinder.com/data/icons/system-basic-vol-4-1/20/icon-note-attention-alt3-512.png

  deploy-dev:
    name: "Deploy: Develop Server"
    runs-on: ubuntu-latest
    needs: [ notification_starting ]
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: "üì• Checkout"
        uses: actions/checkout@v4

      - name: "üë®‚Äçüíª Setup: NodeJs & NPM"
        uses: actions/setup-node@v4
        with:
          node-version: v20.10.0

      - name: "üë®‚Äçüíª NPM: Install Dependencies"
        # env:
          # NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm i
          npx browserslist@latest --update-db

      - name: "üèó Build: Asset"
        # env:
          # NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm run prod

      - name: "‚úàÔ∏è Release: Asset"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.HOSTING_DEV_HOST }}
          port: ${{ vars.HOSTING_DEV_PORT }}
          username: ${{ vars.HOSTING_DEV_USER }}
          key: ${{ vars.HOSTING_DEV_SSHKEY }}
          source: "public"
          target: ${{ vars.HOSTING_DEV_PATH }}

      - name: "‚úàÔ∏è Release: Setup"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOSTING_DEV_HOST }}
          port: ${{ vars.HOSTING_DEV_PORT }}
          username: ${{ vars.HOSTING_DEV_USER }}
          key: ${{ vars.HOSTING_DEV_SSHKEY }}
          source: "public"
          script: |
            cd ${{ vars.HOSTING_DEV_PATH }}
            git reset --hard HEAD
            git checkout develop
            git pull
            COMPOSER_ALLOW_SUPERUSER=1 composer update
            cp .env.develop .env
            chown nginx:nginx -R ./
            yes | php artisan migrate -n --force
            service supervisord restart

  notification_finishing:
    name: "Post Workflow"
    runs-on: ubuntu-latest
    needs: [ deploy-dev ]
    steps:
      - name: "üõé Notification: Success"
        uses: mattermost/action-mattermost-notify@master
        if: success()
        with:
          MATTERMOST_WEBHOOK_URL: https://office.dlabs.id/hooks/mp1qz6hteir5fjdrxp8b6e9r1a
          MATTERMOST_CHANNEL: "Jenkins"
          TEXT: |
            POST CICD ${{ github.repository }}.
            [Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_number }}) was SUCCESS :white_check_mark:
          MATTERMOST_USERNAME: system
          MATTERMOST_ICON_URL: https://cdn3.iconfinder.com/data/icons/system-basic-vol-4-1/20/icon-note-attention-alt3-512.png

      - name: "üõé Notification: Failure"
        uses: mattermost/action-mattermost-notify@master
        if: failure()
        with:
          MATTERMOST_WEBHOOK_URL: https://office.dlabs.id/hooks/mp1qz6hteir5fjdrxp8b6e9r1a
          MATTERMOST_CHANNEL: "Jenkins"
          TEXT: |
            POST CICD ${{ github.repository }}.
            [Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_number }}) was FAILED :x:
          MATTERMOST_USERNAME: system
          MATTERMOST_ICON_URL: https://cdn3.iconfinder.com/data/icons/system-basic-vol-4-1/20/icon-note-attention-alt3-512.png
